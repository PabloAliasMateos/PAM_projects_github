* C:\Users\pablo\Google Drive\PAM_projects_github\2017_2018\SC_generator\01_Design\02_LTSpice_sim\SC_generator.asc
XU1 0 trigger N004 Vcc N005 threshold discharge Vcc NE555
C1 N005 0 100n
R1 Vcc N001 {R1_555} tol=1 pwr=0.1
R2_potentiometer N001 N002 {R2_555} tol=1 pwr=0.1
C_monostable N002 0 {C_555} V=25 Irms=0 Rser=0.007 Lser=0
Vcc Vcc 0 12 Rser=.8
XU2 N001 threshold sel_mode discharge Multiplexor2e Cin=1p Cout=1p Iin=0n Iout=0n Ron=10m
XU3 trigger N002 sel_mode threshold Multiplexor2e Cin=1p Cout=1p Iin=0n Iout=0n Ron=10m
XU4 N002 N006 sel_mode trigger Multiplexor2e Cin=1p Cout=1p Iin=0n Iout=0n Ron=10m
XU5 N003 NC_01 sel_mode N002 Multiplexor2e Cin=1p Cout=1p Iin=0n Iout=0n Ron=10m
C_compens N003 0 33n V=25 Irms=0 Rser=0.007 Lser=0
C4 N008 N009 10n
R5 N007 N008 1k
R6 0 N007 10k
R7 0 N009 10K
XU6 N009 Vcc Open_Close Tclose=20*(C_555*ln(2)*(R1_555+2*R2_555))+R_delay*C_delay Ron=10m Roff=10Meg
R8 Vcc N006 10k
C_compens1 N003 0 220n V=25 Irms=0 Rser=0.007 Lser=0
C_compens2 N003 0 330n V=25 Irms=0 Rser=0.007 Lser=0
D1 0 N007 1N4148
R2 Vcc N011 10k
XQ2 N006 N007 0 PMMT491A
Q1 0 N010 N013 0 QPBHV9115T
XQ3 Vcc N010 N013 PMMT491A
R9 N010 N012 1K
XU9 NC_02 N012 N015 N004 Multiplexor2e Cin=1p Cout=1p Iin=0n Iout=0n Ron=10m
C2 N014 0 {C_delay}
R4 sel_mode N014 {R_delay}
XU10 Vcc sel_mode Open_Close Tclose= (19*(C_555*ln(2)*(R1_555+2*R2_555))+0.5*C_555*ln(2)*R2_555) Ron=1n Roff=100000Meg
R3 sel_mode 0 1Meg
Vcc1 N016 0 5 Rser=0
XU8 N014 N016 Vcc 0 N015 LT1018
XU7 N011 N013 0 IPB015N08N5_L1 dVth=0 dRdson=0 dgfs=0 dC=0 Ls=1.8n Ld=1n Lg=4n
.model D D
.lib C:\Users\pablo\Documents\LTspiceXVII\lib\cmp\standard.dio
.model NPN NPN
.model PNP PNP
.lib C:\Users\pablo\Documents\LTspiceXVII\lib\cmp\standard.bjt
.tran {stop_time}
* This MUX network allows to switch between astable and monostable mode
* In astable mode, ton = ln(2)*C*(R1+R2)\nIn monostable mode, tpulse = ln(3)*C*(R1+R2)\nSince the objective is to use the ton of the astable mode to configure the tpulse which generates\nthe SC, the ln() factors must be compensated by increasing C in monostable mode by a factor of ln()3\n/ln(2)
* sel_mode = 0 : astable mode\nsel_mode = 1 : monostable mode
* Edge detector + inversor : to trigger the SC when the circuit is in monostable mode
* R2_555  [1n,100K]
.include OptiMOS5_80V_PSpice.lib
.include SC_generator_models.txt
* Comparator and voltage source to simulate MUX high threshold value
* Control delay network to avoid spurious SC command during the \nastable monostable transition (see handwritten analysis)
.param stop_time = 40*(C_555*ln(2)*(R1_555+2*R2_555))+R_delay*C_delay
.param R1_555 1000
.param R2_555 5k
.param C_555 1u
* To force switching in the middle of the last ton time when the circuit is in astable mode
.param R_delay 30K
.param C_delay 10u
.lib C:\Users\pablo\Google Drive\PAM_projects_github\2017_2018\SC_generator\01_Design\02_LTSpice_sim\OptiMOS5_80V_PSpice.lib
.lib LTC1.lib
.lib NE555.sub
.lib SubCrisa\Interruptor.sub
.lib SubCrisa\Multiplexor.sub
.backanno
.end
